{"version":3,"sources":["Posts/Posts.js","Pagination/Pagination.js","Wrapper/Wrapper.js","JobDetailView/JobDetailView.js","App.js","serviceWorker.js","index.js"],"names":["Posts","postsData","this","props","data","console","log","map","obj","key","id","onClick","jobDetailView","designation","jobType","company","location","salary","type","onChange","searchData","placeholder","className","Component","pagination","fromValue","presentCount","totalCount","noOfPages","showPage","prevPage","nextPage","totalNoOfPages","value","Fragment","length","Wrapper","state","posts","loading","recordsPerPage","currentPage","indexOfLastPage","indexOfPreviousPage","records","postsPerPage","slice","setState","previousPage","prevPageNo","indexOfLastPae","indexOfPreviousPag","postsPerPag","nxtPage","searchforData","event","target","filteredData","filter","includes","filteredName","history","push","pathname","search","jobListView","initialData","Math","ceil","i","JobDetailView","style","padding","height","lineHeight","fontSize","textTransform","App","path","exact","component","Boolean","window","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b8814b8.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n// import {NavLink} from 'react-router-dom';\r\nimport './Posts.css';\r\nclass Posts extends Component{\r\n    // jobDetailView=(designation)=>{\r\n    //     console.log(this.props)\r\n    //     this.props.history.push({\r\n    //         pathname:'/JobDetail',\r\n    //         search:'?'+designation\r\n    //     })\r\n    // }\r\n    render(){\r\n        //console.log(this.props.data)\r\n        let postsData =[]\r\n         postsData = this.props.data;\r\n        console.log(postsData)\r\n       let data= postsData.map(obj=>{\r\n        return <tr key ={obj.id}>\r\n                    <td>{obj.id}</td>\r\n                    <td onClick ={()=>this.props.jobDetailView(obj.designation)}>{obj.designation}</td>\r\n                    <td>{obj.jobType}</td>\r\n                    <td>{obj.company}</td>\r\n                    <td>{obj.location}</td>\r\n                    <td>{obj.salary}</td>\r\n\r\n                </tr>\r\n        })\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <input type =\"search\" onChange = {this.props.searchData} placeholder = \"search for JobRole\"/>\r\n                </div>\r\n                <table className= \"Posts table table-striped table-bordered table-sm dataTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Job Role</th>\r\n                            <th>Job Type</th>\r\n                            <th>Company</th>\r\n                            <th>Location</th>\r\n                            <th>Salary</th>\r\n                        </tr>                        \r\n                    </thead>\r\n                    <tbody>                      \r\n                            {data}                      \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posts","import React from 'react';\r\nimport  './Pagination.css';\r\n//import classes from '*.module.css';\r\n//import { MDBDataTable } from 'mdbreact';\r\n// class Pagination extends Component{\r\n     \r\n//     render(){\r\n//        return(\r\n          \r\n//         ) \r\n//     }\r\n// }\r\nlet pagination = ({fromValue,presentCount,totalCount,noOfPages,showPage,prevPage,nextPage})=>{\r\n  console.log(noOfPages);\r\n  //let curPage = 0;\r\n  if(presentCount>totalCount)\r\n     presentCount=totalCount\r\n  let totalNoOfPages = noOfPages.map(value=>{\r\n     //curPage =value;\r\n    return (\r\n    <li key = {value} className =\"page-item\" onClick ={()=>showPage(value)}>{value}</li>\r\n    )\r\n  })\r\nreturn(\r\n  <React.Fragment>\r\n    \r\n    <div className =\"contentAlign\">    \r\n            <div className =\"results\">Showing Results {fromValue+1} to {presentCount} of {totalCount}</div>       \r\n            {/* <nav style={{'width': '100%','padding-left': '40%'}}> */}\r\n            <div className = \"page-list\">\r\n                <ul  className =\"paginationAlignment\">\r\n                      <li className =\"page-item\" onClick ={prevPage}> Prev</li>\r\n                          {totalNoOfPages}\r\n                      <li className =\"page-item\" onClick ={()=>nextPage(noOfPages.length)}>Next</li>\r\n                 </ul>\r\n            </div>                \r\n             {/* </nav> */}   \r\n    </div>\r\n     \r\n  </React.Fragment>\r\n  \r\n)\r\n}\r\nexport default pagination;\r\n","import React ,{Component}from 'react';\r\nimport Posts from '../Posts/Posts';\r\nimport Pagination from '../Pagination/Pagination'; \r\n// import {withRouter} from 'react-router-dom'\r\nimport './Wrapper.css';\r\nclass Wrapper extends Component{\r\n    state={\r\n        posts:[],\r\n        loading:false,\r\n        recordsPerPage :5,\r\n        currentPage:1,\r\n        indexOfLastPage:0,\r\n        indexOfPreviousPage:0\r\n    }\r\n    data =[];\r\n    \r\n    componentDidMount(){\r\n        console.log(\"wrapper.js componentDidMount\")\r\n       this.data =[\r\n            {id:1,designation:'sr software engineer',jobType:'fulltime',company:'vesatogo',location:'nashik',salary:'$2000'},\r\n            {id:2,designation:'jr software engineer',jobType:'fulltime',company:'flipkart',location:'hyderabad',salary:'$3100'},\r\n            {id:3,designation:'sales executive',jobType:'fulltime',company:'wintij',location:'bangalore',salary:'$5300'},\r\n            {id:4,designation:'Testing',jobType:'fulltime',company:'vyapar',location:'mumbai',salary:'$2030'},\r\n            {id:5,designation:'Database Administrator',jobType:'fulltime',company:'medinin',location:'chennai',salary:'$3065'},\r\n            {id:6,designation:'Product Manager',jobType:'fulltime',company:'nueve',location:'vizag',salary:'$4766'},\r\n            {id:7,designation:'support',jobType:'fulltime',company:'mouri tech',location:'pune',salary:'$8745'},\r\n            {id:8,designation:'Technical Consultant',jobType:'fulltime',company:'verizon',location:'gurgoan',salary:'$7465'},\r\n            {id:9,designation:'associate software engineer',jobType:'fulltime',company:'teradata',location:'ahmedabad',salary:'$8746'},\r\n            {id:10,designation:'Accoutant',jobType:'fulltime',company:'amazon',location:'Dallas',salary:'$6472'},\r\n            {id:11,designation:'Accoutant',jobType:'fulltime',company:'amazon',location:'Dallas',salary:'$6472'}\r\n        ]\r\n        let initialData = this.data.slice(0,5)\r\n        this.setState({\r\n            posts:initialData,\r\n            loading:true,\r\n            indexOfLastPage:5,\r\n            indexOfPreviousPage:0\r\n\r\n        })\r\n    }\r\n    currentPage=(currentPage)=>{\r\n        console.log(currentPage)\r\n        let records = this.state.recordsPerPage\r\n        let indexOfLastPage = currentPage*records;\r\n        let indexOfPreviousPage = (currentPage-1)*records;\r\n        console.log(indexOfPreviousPage)\r\n        console.log(indexOfLastPage)\r\n        console.log(this.data)\r\n        let postsPerPage= this.data.slice(indexOfPreviousPage,indexOfLastPage);\r\n        console.log(postsPerPage)\r\n        this.setState({\r\n            posts:postsPerPage,\r\n            currentPage:currentPage,\r\n            indexOfLastPage:indexOfLastPage,\r\n            indexOfPreviousPage:indexOfPreviousPage\r\n        })\r\n    }\r\n    previousPage =()=>{\r\n        //console.log(\"prevPage\")\r\n        //console.log(this.state.currentPage)\r\n        let prevPageNo = this.state.currentPage;\r\n        //let postsPerPage=0;let indexOfLastPage;let indexOfPreviousPage\r\n        if(prevPageNo>1){\r\n           // console.log(\"in prev\")\r\n            let records = this.state.recordsPerPage\r\n            let indexOfLastPae = (prevPageNo-1)*records;\r\n            let indexOfPreviousPag = (prevPageNo-2)*records;\r\n            //console.log(\"indexOfPreviousPag=\"+indexOfPreviousPag)\r\n            //console.log(\"indexOfLastPae=\"+indexOfLastPae)\r\n            //console.log(this.data)\r\n            let postsPerPag= this.data.slice(indexOfPreviousPag,indexOfLastPae);\r\n            //console.log(postsPerPag)\r\n            this.setState({\r\n                posts:postsPerPag,\r\n                currentPage:prevPageNo-1,\r\n                indexOfLastPage:indexOfLastPae,\r\n                indexOfPreviousPage:indexOfPreviousPag\r\n            })\r\n        }\r\n    }\r\n    nextPage =(nxtPage)=>{\r\n        console.log(\"nextPage=\"+nxtPage)\r\n        console.log(this.state.currentPage)\r\n        let prevPageNo = this.state.currentPage;\r\n        //let postsPerPage=0;let indexOfLastPage;let indexOfPreviousPage\r\n        if(prevPageNo<nxtPage){\r\n            //console.log(\"in next\")\r\n            let records = this.state.recordsPerPage\r\n            let indexOfLastPae = (prevPageNo+1)*records;\r\n            let indexOfPreviousPag = (prevPageNo)*records;\r\n            console.log(\"indexOfPreviousPag=\"+indexOfPreviousPag)\r\n            console.log(\"indexOfLastPae=\"+indexOfLastPae)\r\n            console.log(this.data)\r\n            let postsPerPag= this.data.slice(indexOfPreviousPag,indexOfLastPae);\r\n            console.log(postsPerPag)\r\n            this.setState({\r\n                posts:postsPerPag,\r\n                currentPage:prevPageNo+1,\r\n                indexOfLastPage:indexOfLastPae,\r\n                indexOfPreviousPage:indexOfPreviousPag\r\n            })\r\n        }\r\n    }\r\n    searchforData=(event)=>{\r\n        console.log(event.target.value)\r\n        let filteredData =[];\r\n        filteredData = this.data.filter(value=>value['designation'].includes(event.target.value)).map(filteredName=> filteredName)\r\n        \r\n        console.log(filteredData)\r\n        this.setState({\r\n            posts:filteredData\r\n        })\r\n    }\r\n    jobDetailView=(designation)=>{\r\n            console.log(this.props)\r\n            this.props.history.push({\r\n                pathname:'/JobDetail',\r\n                search:'?'+designation\r\n            })\r\n        }\r\n    jobListView=()=>{\r\n        this.props.history.push({\r\n            pathname:'/'              \r\n        }) \r\n    }\r\n    render(){\r\n        console.log(this.state.posts)\r\n        let totalNoOfPages = [];\r\n        console.log(\"==\"+Math.ceil(this.data.length/this.state.recordsPerPage))\r\n        for(let i=1;i<=Math.ceil(this.data.length/this.state.recordsPerPage);i++){\r\n            totalNoOfPages.push(i);\r\n        }\r\n        console.log(\"wrapper.js render\")\r\n        let postsData = <p>Loading...</p>\r\n        if(this.state.loading)\r\n           postsData = <Posts data = {this.state.posts} searchData={this.searchforData} jobDetailView={this.jobDetailView}/>\r\n        console.log(this.data)\r\n        return(\r\n            <div className = \"Wrapper\">\r\n                 {postsData}\r\n                <Pagination fromValue ={this.state.indexOfPreviousPage} \r\n                    presentCount = {this.state.indexOfLastPage} totalCount = {this.data.length}\r\n                    noOfPages = {totalNoOfPages} showPage = {this.currentPage} prevPage={this.previousPage} nextPage = {this.nextPage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wrapper;","import React ,{Component}from 'react';\r\nimport './JobDetailView.css';\r\n//import { MDBIcon } from \"mdbreact\";\r\nclass JobDetailView extends Component{\r\n    jobListView=()=>{\r\n        this.props.history.push({\r\n            pathname:'/'              \r\n        }) \r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                 <button onClick ={this.jobListView}>gotoJobsList</button> \r\n                <div className = \"JobDetailHeader\">\r\n                    <div>\r\n                        <div className = \"job-detail-title\">Vesatogo - React.js Developer - HTML5/CSS/Javascript</div>\r\n                    </div>\r\n                    <div className = \"company-detail-wrapper\">\r\n                        <div> Vesatogo</div>\r\n                        <span className = \"seperator\"></span>\r\n                        <div> Nashik </div>\r\n                        <span className = \"seperator\"></span>\r\n                        <div> 0-2 years</div>\r\n                    </div>\r\n                    <div className = \"align-skills\">\r\n                        <div className = \"skillsWrapper\">ReactJs</div>\r\n                        <div className = \"skillsWrapper\">HTML5</div>\r\n                        <div className = \"skillsWrapper\">CSS</div>\r\n                        <div className = \"skillsWrapper\">Javascript</div>\r\n                        <div className = \"skillsWrapper\">RestAPI</div>\r\n                        <div className = \"skillsWrapper\">DataStructures</div>\r\n                        <div className = \"skillsWrapper\">ES6</div>\r\n                        <div className = \"skillsWrapper\">TypeScript</div>\r\n                        <div className = \"skillsWrapper\">AWS</div>\r\n                    </div>\r\n                    <div>\r\n                       <span>Last Date 19 OCT 2020</span>\r\n                       <button type=\"button\" style ={{  padding: '8px',height: \"27px\",lineHeight: '1px',\r\n                            fontSize: '14px',textTransform:'none'}}className = \"btn btn-amber\">Apply Now</button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"content-container\">\r\n                    <div className = \"details-container\">\r\n                        <div className = \"details new-color\">\r\n                            <p>\r\n                                <b>About Vesatogo</b>\r\n                                <br></br>\r\n                                -In India, more than 80% of farmers are marginal farmers, having land holding of less than 5 acres. This is the prime reason why they are unable to purchase resources of their own.  The cost of hiring resources e.g., transportation services is 12-15% of the total income. Also, most of the time the resources are not \r\n                                    optimally  utilized due to part loading and service providers having access to limited set of farmers and vice versa.                                    \r\n                                <br></br>\r\n                                <br></br>\r\n                                    -Vesatogo is a platform providing efficient and economical logistics options to the marginal farmers of the country and also ensuring optimal utility of resources.\r\n                                <br></br>\r\n                                <br></br>\r\n                                    -Vesatogo is working in association with Sahyadri Farms, one of the largest Farmer Producer Organization in the country, acting as implementation partner. TATA Motors Mobility Innovation Labs is providing expert guidance and mentoring. The seed funding and guidance is provided by Digital Impact Square, a TCS Foundation Initiative.\r\n                                <br></br>\r\n                                <br></br>\r\n                                    -Vesatogo is currently being developed for FPOs and their associated farmers, helping them in identifying and removing inefficiencies in their operations and also saving cost for the farmer. This model once developed can be scaled to all the FPOs in the country.\r\n                                <br></br>\r\n                                <br></br>\r\n                                    <br></br> \r\n                                <b>Skills we are looking for :</b>\r\n                                <br></br>\r\n                                <br></br>\r\n                                - Experience in developing front-end applications at scale\r\n                                <br></br>\r\n                                - Strong knowledge and experience in HTML(5), CSS, SCSS and Advanced JavaScript\r\n                                <br></br>\r\n                                - Experience of writing modular/reusable code and using JS frameworks like React.js\r\n                                <br></br>\r\n                                - Experience with data structure libraries (e.g., Immutable.js)\r\n                                <br></br>\r\n                                 - Familiarity with RESTful APIs\r\n                                 <br></br>\r\n                                - Strong knowledge of Web Storage (Cookie, Local Storage and Session Storage)\r\n                                <br></br>\r\n                                - Knowledge of modern authorization mechanisms, such as JWT\r\n                                <br></br>\r\n                                - Familiarity with modern front-end build pipelines and tools\r\n                                <br></br>\r\n                                - Hands-on experience of building web apps using React.\r\n                                <br></br>\r\n                                - Deep understanding of Javascript programming language and ES6.\r\n                                <br></br>\r\n                                - Ability to work in a lean-agile development environment.\r\n                                <br></br>\r\n                                <br></br>\r\n                                <br></br>\r\n                                <b>Good to know :</b>\r\n                                <br></br>\r\n                                <br></br>\r\n                                - Proficiency in TypeScript and/or Flow\r\n                                <br></br>\r\n                                - Knowledge of AWS\r\n                                <br></br>\r\n                                - Familiarity with GraphQL will be a brownie point\r\n                            </p>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default JobDetailView","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Wrapper from './Wrapper/Wrapper'\nimport JobDetailView from './JobDetailView/JobDetailView'\nimport {Route,Switch} from 'react-router-dom';\nfunction App() {\n  return (\n         <div>    \n            {/* <Wrapper/> */}\n            {/* <JobDetailView/> */}\n            <Switch>\n              <Route path ='/' exact component = {Wrapper}/>\n              <Route path ='/JobDetail' exact component = {JobDetailView}/>\n            </Switch>\n            \n          </div>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nconst app =\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}